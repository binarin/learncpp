module(name = "learncpp")

bazel_dep(name = "rules_nixpkgs_core", version = "0.12.0")
local_path_override(
   module_name = "rules_nixpkgs_core",
   path = "../rules_nixpkgs/core",
)


nix_repo = use_extension("@rules_nixpkgs_core//extensions:repository.bzl", "nix_repo")
nix_repo.file(
    name = "nixpkgs",
    file = "//:nixpkgs.nix",
    file_deps = ["//:flake.lock"],
)
use_repo(nix_repo, "nixpkgs")

bazel_dep(name = "rules_nixpkgs_cc")
# Replace by archive_override to download a rules_nixpkgs_cc revision.
# (rules_nixpkgs_cc is not available on the BCR, yet.)
#
# archive_override(
#     module_name = "rules_nixpkgs_cc",
#     urls = ["https://github.com/tweag/rules_nixpkgs/releases/download/v0.12.0/rules_nixpkgs-0.12.0.tar.gz"],
#     # integrity = "sha256-1adb04dc0416915fef427757f4272c4f7dacefeceeefc50f683aec7f7e9b787a",
#     strip_prefix = "rules_nixpkgs-0.12.0/toolchains/cc",
# )
local_path_override(
   module_name = "rules_nixpkgs_cc",
   path = "../rules_nixpkgs/toolchains/cc",
)

# TODO remove transitive rules_nixpkgs_cc dependencies.
#   Once there is a module extension for the cc toolchain.
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_cc", version = "0.0.9")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)
